// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/members": {
            "get": {
                "description": "Retrieves a list of all members",
                "produces": [
                    "application/json"
                ],
                "summary": "Displays all members",
                "responses": {
                    "200": {
                        "description": "List of members",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts a new member with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Inserts a new member",
                "parameters": [
                    {
                        "description": "Member data",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inserted member data",
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                }
            }
        },
        "/members/{id}": {
            "get": {
                "description": "Retrieves a member with the specified ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a member by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member data",
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a member with the specified ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a member by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Member deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a member with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a member by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Member data",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated member data",
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                }
            }
        },
        "/{name}": {
            "get": {
                "description": "Displays a hello message with the provided name",
                "produces": [
                    "application/json"
                ],
                "summary": "Displays a hello message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the person",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Hello {name}! Are you a Beatles fan?",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Member": {
            "type": "object",
            "required": [
                "name",
                "role"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 2
                },
                "role": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
